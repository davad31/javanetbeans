
import java.util.Scanner;

public class Curso {
    private String nombreCurso;
    //relaciones de asociacion
    private Profesor profesor; //un curso tiene un profesor
    private Estudiante[] estudiantes; //un curso tiene muchos estudiantes

    //constructores
    public Curso(){
    }

    public Curso(String nom, Profesor prof){
        this.nombreCurso = nom;
        this.profesor = prof;
    }

    //getters y setters
    public String getNombreCurso(){
        return this.nombreCurso;
    }

    public Profesor getProfesor(){
        return this.profesor;
    }

    public Estudiante[] getEstudiante(){
        return this.estudiantes;
    }

    public void setNombreCurso(String nombreCurso){
        this.nombreCurso = nombreCurso;
    }

    public void setProfesor(Profesor prof){
        this.profesor = prof;
    }

    public void setEstudiante(Estudiante[] est){
        this.estudiantes = est;
    }

    //metodos
    public void ingresarDatos(){
        Scanner sc = new Scanner(System.in);
        System.out.println("Nombre del curso: ");
        this.nombreCurso = sc.nextLine();
    }

    public void mostrarDatos(){
        System.out.println("---Datos de curso---");
        System.out.println("Curso: " + this.nombreCurso);
        System.out.println("Profesor: ");
        this.profesor.mostrarDatos();
        System.out.println("---Lista de estudiantes---");
        for(int i=0; i<this.estudiantes.length; i++){
            this.estudiantes[i].mostrarDatos();
        }
    }
}
_________________________________________________________________________________________________________________________________________________________________________________________________

import java.util.Scanner;

import java.util.Scanner;

public class Estudiante extends Persona{
    private int nivel;

    //constructores
    //getters y setters
    public int getNivel(){
        return this.nivel;
    }

    public void setNivel(int nivel){
        this.nivel = nivel;
    }

    @Override
    public void ingresarDatos(){
        System.out.println("Ingresar estudiante");
        super.ingresarDatos();
        System.out.println("Nivel del estudiante: ");
        Scanner sc = new Scanner(System.in);
        this.nivel = sc.nextInt();
        sc.nextLine();
    }

    @Override
    public void mostrarDatos(){
        System.out.println("---Datos del estudiante---");
        super.mostrarDatos();
        System.out.println("Nivel: " + this.nivel);
    }
}
____________________________________________________________________________________________________________________________________________________________________________________________________________
import java.util.ArrayList;
import java.util.Scanner;

public class AdministradorEstudiante {
    public static ArrayList<Estudiante> lista = new ArrayList<>();

    public void agregar(Estudiante e) {
        lista.add(e);
    }

    public boolean eliminarPorCedula(String cedula) {
        boolean resultado;
        Estudiante e = buscarPorCedula(cedula);
        if (e != null) {
            lista.remove(e);
            resultado = true;
        }
        resultado = false;
        return resultado;
    }

    public Estudiante buscarPorCedula(String cedula) {
        Estudiante estEncontrado = null;
        for (Estudiante e: lista) {
            if (e.getCedula().equalsIgnoreCase(cedula)) {
                estEncontrado = e;
            }
        }
        return estEncontrado;
    }

    public ArrayList<Estudiante> buscarPorNombre(String nombre) {
        ArrayList<Estudiante> encontrados = new ArrayList<>();
        for (Estudiante e : lista) {
            if (e.getNombre() != null && e.getNombre().toLowerCase().contains(nombre.toLowerCase())) {
                encontrados.add(e);
            }
        }
        return encontrados;
    }

    public void mostrarLista() {
        for (Estudiante e : lista) {
            e.mostrarDatos();
        }
    }

    public void menuEstudiante() {
        Scanner sc = new Scanner(System.in);
        int opcion = 0;
        do {
            System.out.println("\n****** Menú de Estudiante ******");
            System.out.println("1. Registrar Estudiante");
            System.out.println("2. Mostrar lista");
            System.out.println("3. Buscar por cédula");
            System.out.println("4. Buscar por nombre");
            System.out.println("5. Eliminar por cédula");
            System.out.println("0. Salir");
            System.out.print("Opción: ");
            opcion = sc.nextInt();
            sc.nextLine();

            switch (opcion) {
                case 1: //ingresar o registrar
                    Estudiante nuevo = new Estudiante();
                    nuevo.ingresarDatos();
                    agregar(nuevo);
                    break;
                case 2: //mostrar lista de estudiante
                    mostrarLista();
                    break;
                case 3://buscar estudiante por cedula
                    System.out.print("Cédula: ");
                    String ced = sc.nextLine();
                    Estudiante e = buscarPorCedula(ced);
                    if (e != null) {
                        e.mostrarDatos();
                    } else {
                        System.out.println("No encontrado.");
                    }
                    break;
                case 4: //buscar por nombre
                    System.out.print("Nombre de estudiante a buscar: ");
                    String nom = sc.nextLine();
                    ArrayList<Estudiante> resultados = buscarPorNombre(nom);
                    if (!resultados.isEmpty()) {
                        for (Estudiante est : resultados) {
                            est.mostrarDatos();
                        }
                    } else {
                        System.out.println("No se encontraron coincidencias.");
                    }
                    break;
                case 5:
                    System.out.print("Cédula para eliminar: ");
                    ced = sc.nextLine();
                    if (eliminarPorCedula(ced)) {
                        System.out.println("Eliminado.");
                    } else {
                        System.out.println("No encontrado.");
                    }
                    break;
                case 0:
                    System.out.println("Adiós.");
                    break;
                default:
                    System.out.println("Opción inválida.");
            }
        } while (opcion != 0);
    }
}
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________
import java.util.ArrayList;
import java.util.Scanner;

public class AdministradorProfesor {
    public static ArrayList<Profesor> lista = new ArrayList<>();

    public void agregar(Profesor p) {
        lista.add(p);
    }

    public boolean eliminarPorCedula(String cedula) {
        boolean resultado;
        Profesor p = buscarPorCedula(cedula);
        if (p != null) {
            lista.remove(p);
            resultado = true;
        }
        resultado = false;
        return resultado;
    }

    public Profesor buscarPorCedula(String cedula) {
        Profesor profEncontrado = null;
        for (Profesor p : lista) {
            if (p.getCedula().equalsIgnoreCase(cedula)) {
                profEncontrado = p;
            }
        }
        return profEncontrado;
    }

    public ArrayList<Profesor> buscarPorNombre(String nombre) {
        ArrayList<Profesor> encontrados = new ArrayList<>();
        for (Profesor p : lista) {
            if (p.getNombre() != null && p.getNombre().toLowerCase().contains(nombre.toLowerCase())) {
                encontrados.add(p);
            }
        }
        return encontrados;
    }

    public void mostrarLista() {
        for (Profesor p : lista) {
            p.mostrarDatos();
        }
    }

    public void menuProfesores() {
        Scanner sc = new Scanner(System.in);
        int opcion = 0;
        do {
            System.out.println("\n****** Menú de Profesores ******");
            System.out.println("1. Registrar profesor");
            System.out.println("2. Mostrar lista");
            System.out.println("3. Buscar por cédula");
            System.out.println("4. Buscar por nombre");
            System.out.println("5. Eliminar por cédula");
            System.out.println("0. Salir");
            System.out.print("Opción: ");
            opcion = sc.nextInt();
            sc.nextLine();

            switch (opcion) {
                case 1: //ingresar o registrar
                    Profesor nuevo = new Profesor();
                    nuevo.ingresarDatos();
                    agregar(nuevo);
                    break;
                case 2: //mostrar lista de profesores
                    mostrarLista();
                    break;
                case 3://buscar profesor por cedula
                    System.out.print("Cédula: ");
                    String ced = sc.nextLine();
                    Profesor p = buscarPorCedula(ced);
                    if (p != null) {
                        p.mostrarDatos();
                    } else {
                        System.out.println("No encontrado.");
                    }
                    break;
                case 4: //buscar por nombre
                    System.out.print("Nombre de prof a buscar: ");
                    String nom = sc.nextLine();
                    ArrayList<Profesor> resultados = buscarPorNombre(nom);
                    if (!resultados.isEmpty()) {
                        for (Profesor prof : resultados) {
                            prof.mostrarDatos();
                        }
                    } else {
                        System.out.println("No se encontraron coincidencias.");
                    }
                    break;
                case 5:
                    System.out.print("Cédula para eliminar: ");
                    ced = sc.nextLine();
                    if (eliminarPorCedula(ced)) {
                        System.out.println("Eliminado.");
                    } else {
                        System.out.println("No encontrado.");
                    }
                    break;
                case 0:
                    System.out.println("Adiós.");
                    break;
                default:
                    System.out.println("Opción inválida.");
            }
        } while (opcion != 0);
    }
}
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________
import java.util.Scanner;

import java.util.Scanner;

public class Persona {
    //atributos
    protected String nombre;
    protected String cedula;

    public String getNombre(){
        return this.nombre;
    }

    public String getCedula(){
        return this.cedula;
    }

    public void setNombre(String nombre){
        this.nombre = nombre;
    }

    public void setCedula(String cedula){
        this.cedula = cedula;
    }

    public void ingresarDatos(){
        Scanner sc = new Scanner(System.in);
        System.out.println("Cedula: ");
        this.cedula=sc.nextLine();
        System.out.println("Nombre: ");
        this.nombre=sc.nextLine();
    }

    public void mostrarDatos(){
        System.out.println("Cedula: " + this.cedula);
        System.out.println("Nombre: " + this.nombre);
    }
}
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
import java.util.Scanner;

public class Profesor extends Persona {
    private String tituloAcad;

    //constructores
    //getters y setters
    public String getTituloAcad(){
        return this.tituloAcad;
    }

    public void setTituloAcad(String tituloAcad){
        this.tituloAcad = tituloAcad;
    }

    @Override
    public void ingresarDatos(){
        System.out.println("Ingresar profesor");
        super.ingresarDatos();
        System.out.println("Titulo del profesor: ");
        Scanner sc = new Scanner(System.in);
        this.tituloAcad = sc.nextLine();
    }

    @Override
    public void mostrarDatos(){
        System.out.println("---Datos del profesor---");
        super.mostrarDatos();
        System.out.println("Titulo: " + this.tituloAcad);
    }
}
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________


public class Main {
    public static void main(String[] args) {
        Profesor prof = new Profesor();
        prof.ingresarDatos();
        Estudiante est = new Estudiante();
        est.ingresarDatos();

        Estudiante est2 = new Estudiante();
        est2.ingresarDatos();
        Curso curso = new Curso();
        curso.ingresarDatos();
        curso.setProfesor(prof);
        Estudiante[] arrEst = new Estudiante[2];
        arrEst[0] = est;
        arrEst[1] = est2;
        curso.setEstudiante(arrEst);
        curso.mostrarDatos();
    }
}
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
