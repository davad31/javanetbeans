//* package uno;

public class Persona {
  private String nombre;
  int edad;
  public String cedula;

    //falta constructor.

   void mostrarDatos(){
        
        System.err.println("Datos");
    }
  }
____________________________________________________________________________________________________________________________}
public class  Registro(){
    
    public static void Main (String args[]){
        
        persona p= new Persona ("Juan"); // esto no funciona debido a que no hay un constructor.
        p.nombre = "Jose"; // esta privado en  la clase por eso no se puedde acceder.
        p.edad = 29; // 
        p.cedula= !"!092478910"; // si se puede usar debido a que esta en el mismo paquete.
        p.mostrarDatos(); // si se puede usar porque esta en el mismo paquete( por default).

    }
}




Ojo con los modificadores Por el publico y por el defecto.

el codigo corregido seria el siguiente.

public class Persona {
    public String nombre;
    int edad;
    public String cedula;
    
     public void Persona(){
         this.nombre = nombre;
         this.cedula = cedula;
     }
    void mostrarDatos(){
        
        System.err.println("Datos");
    }  
}
_____________________________________________________________________________________________________________________________


public class registro {
     public static void Main (String args[]){
        
        Persona p = new Persona ();
        p.nombre = "Jose";
        p.edad = 29;
        p.cedula = "!092478910";
        p.mostrarDatos();
    }
}

________________________________________________________________________________________________________________________________________

acontinuacion de la clase 04
   //getter y setter = son un punto de acceso para los modificadores privados, en donde el get coge la informacion que el set espera.( el get prohibe su cambio y el sett permite el acceso de informacion nueva para el atributo que estece privado).
    
    public String getNombre(){
        return this.nombre;
    }
    
    public void setNombre(String nombre){
        this.nombre = nombre;
    }
    
    public int getcantidadDisponible(){
        return this.cantidadDisponible;
    }
    
    public void setcantidadDisponible( int nuevaCantidad){
       this.cantidadDisponible = nuevaCantidad; 
    }
    
    public float precio(){
        return this.precio;
    }
        
    public void precio(float precio){
        this.precio = precio;
    }

En la clase 04 para que no nos salga error en las lineas de codigo es usando el set
ejemplo:
produc.setnombre("ingresenombre");



sigo con la acontinuacion de la clase 03 :
agregando otro metodo.
public void ingresarDatos(){
        Scanner sc= new Scanner( System.in);
        System.out.println("------------------------- Ingreso de producto------------------");
        System.out.println("nombre");
        this.nombre = sc.nextLine(); // para leer string
        System.out.println("Cantidad disponible");
        this.cantidadDisponible = sc.nextInt(); // para leer int
        System.out.println("Precio");
        this.precio = sc.nextFloat(); // para leer float
    }


      public void SiingresarDatos() {
        Scanner sc = new Scanner(System.in);
        System.out.println("------------------------- Ingreso de producto------------------");
       
         String nombreingresado = "";
        boolean nombreValido = true;
        do {
            System.out.println("nombre");
            nombreingresado = sc.nextLine();// para leer string
            nombreValido = true;
            
            if (nombreingresado.length() < 5 ||  this.getNombre().length() >=30) {

                System.out.print("Nombre del producto entre 5 y maximo 30");
                nombreValido = false;
            }
          // revisar caracter por caracter.
          for (int i =0; i<nombreingresado.length(); i++){
            char c = nombreingresado.charAt(i); // para evaluar cada caracter.
            if (!Character.isLetterOrDigit(c) && c != ' '){
            nombreValido = false;
            break; // salir del for.
            }
          }
          //revisar con expresion regular
          if(!nombreingresado.matches("^[ a-zA-z0-9]+$")){
              System.out.println("solo letras, numeros y espacios");
              nombreValido = false;
          }
              
        } while (!nombreValido);
        this.setNombre(nombreingresado);
 
         // System.out.println("Cantidad disponible");
        //this.cantidadDisponible = sc.nextInt(); // para leer int
        
        int cantidadIngresado = 0;
        boolean cantidadValida = true;
        
        do{
            System.out.println("cantidad disponible");
            cantidadValida = true;
            if(sc.hasNextInt()){ // pregunto si el usuario esta ingresando un numero
                cantidadIngresado = sc.nextInt(); // para leer int
                //verificar
                
                
            }else{
                System.out.println("Dato invalido, debe ser numero");
                cantidadValida = false;
                sc.next(); // limpiar la entrada de datos
            }
            if(cantidadIngresado<= 0  || cantidadIngresado >1000){
                System.out.println("entre 1 y 1000");
                cantidadValida = false;
            }
            
            
        }while(cantidadValida==false); 
         this.setcantidadDisponible(cantidadIngresado);

        System.out.println("Precio");
        this.precio = sc.nextFloat(); // para leer float
    }
}
para verificar un numero delei se necesita el numero al igual que al verificar un nombre o producto.

//sobrecarga
calclulos para ejemsiplificar
public double calcularPrecioFinal(){
    if(this.precio >100){
      return this.precio - 5;
}else{
return this.precio;
}
}
public double calcularPrecioFinal(double porcentajededescuento)}{
return this.precio - (this.precio *porcentajededescuento);
}

public double  calcularPrecioFinal(double porc_descuento, double impuesto){
double precioCondescto = this.precio(this.precio *porc_descuento);
double valorImpuesto = this.precio * impuesto;
return precioConDescuento + valorImpuesto;
}
*/








